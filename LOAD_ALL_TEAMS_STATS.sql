--TRUNCATE TABLE NHL_DB.RAW.ALL_TEAMS_STATS;
INSERT INTO NHL_DB.RAW.ALL_TEAMS_STATS
-- Deduplicate the records using gameid
WITH CTE_SOURCE_DATA AS 
(
SELECT 
TEAM, SEASON, NAME, GAMEID, PLAYERTEAM, OPPOSINGTEAM,
HOME_OR_AWAY, GAMEDATE, POSITION,GOALSFOR,GOALSAGAINST,
PENALTIESFOR, PENALITYMINUTESFOR,PENALTIESAGAINST, PENALITYMINUTESAGAINST,
ICETIME,PLAYOFFGAME,XGOALSFOR,XGOALSAGAINST,SHOTSONGOALFOR,SHOTSONGOALAGAINST,
CASE 
WHEN ASCII(PLAYERTEAM) < ASCII(OPPOSINGTEAM) THEN 1
ELSE 2
END
AS TEAM_COMBO
FROM NHL_DB.RAW.ALL_TEAMS  
WHERE SITUATION ='all'
AND GAMEID NOT IN (SELECT DISTINCT GAMEID FROM NHL_DB.RAW.ALL_TEAMS
WHERE GOALSFOR=GOALSAGAINST AND ICETIME>3600 AND XGOALSFOR=XGOALSAGAINST)
--AND PLAYERTEAM IN ('MTL','FLA')
--AND OPPOSINGTEAM IN ('MTL','FLA')
--AND GAMEID IN (2017021038,2017021118)
QUALIFY ROW_NUMBER() OVER (PARTITION BY GAMEID ORDER BY GAMEDATE DESC) = 1
)
,
CTE_ARRANGED_TEAM_STATS 
AS (
SELECT 
CASE WHEN TEAM_COMBO = 1 THEN PLAYERTEAM ELSE OPPOSINGTEAM END AS TEAM_1,
CASE WHEN TEAM_COMBO = 2 THEN PLAYERTEAM ELSE OPPOSINGTEAM END AS TEAM_2,
CASE WHEN TEAM_COMBO = 1 THEN GOALSFOR ELSE GOALSAGAINST END AS TEAM_1_GOAL,
CASE WHEN TEAM_COMBO = 2 THEN GOALSFOR ELSE GOALSAGAINST END AS TEAM_2_GOAL,
CASE WHEN TEAM_COMBO = 1 THEN XGOALSFOR ELSE XGOALSAGAINST END AS TEAM_1_XGOAL,
CASE WHEN TEAM_COMBO = 2 THEN XGOALSFOR ELSE XGOALSAGAINST END AS TEAM_2_XGOAL,
CASE WHEN TEAM_COMBO = 1 THEN PENALTIESFOR ELSE PENALTIESAGAINST END AS TEAM_1_PENALTIES,
CASE WHEN TEAM_COMBO = 2 THEN PENALTIESFOR ELSE PENALTIESAGAINST END AS TEAM_2_PENALTIES,
CASE WHEN TEAM_COMBO = 1 THEN (GOALSFOR/SHOTSONGOALFOR) ELSE (GOALSAGAINST/SHOTSONGOALAGAINST) END AS TEAM_1_GOAL_PERCENTAGE,
CASE WHEN TEAM_COMBO = 2 THEN (GOALSFOR/SHOTSONGOALFOR) ELSE (GOALSAGAINST/SHOTSONGOALAGAINST) END AS TEAM_2_GOAL_PERCENTAGE,
ICETIME,PLAYOFFGAME
FROM CTE_SOURCE_DATA
)

SELECT 
TEAM_1, TEAM_2,
COUNT(1) AS NO_OF_MATCHES,
SUM(CASE WHEN ((TEAM_1_GOAL>TEAM_2_GOAL) OR ((TEAM_1_GOAL=TEAM_2_GOAL) AND (TEAM_1_XGOAL>TEAM_2_XGOAL)))
THEN 1 ELSE 0 END) AS TEAM_1_WIN_COUNT,
SUM(CASE WHEN ((TEAM_1_GOAL>TEAM_2_GOAL) OR ((TEAM_1_GOAL=TEAM_2_GOAL) AND (TEAM_1_XGOAL>TEAM_2_XGOAL)))
 THEN 0 ELSE 1 END) AS TEAM_2_WIN_COUNT,
SUM(CASE WHEN (ICETIME-3600)>0  AND ((TEAM_1_GOAL>TEAM_2_GOAL) OR ((TEAM_1_GOAL=TEAM_2_GOAL) AND (TEAM_1_XGOAL>TEAM_2_XGOAL))) THEN 1 ELSE 0 END) AS TEAM_1_OVERTIME_WINS,
SUM(CASE WHEN (ICETIME-3600)>0  AND ((TEAM_2_GOAL>TEAM_1_GOAL) OR ((TEAM_1_GOAL=TEAM_2_GOAL) AND (TEAM_2_XGOAL>TEAM_1_XGOAL))) THEN 1 ELSE 0 END) AS TEAM_2_OVERTIME_WINS,
AVG(TEAM_1_PENALTIES) AS AVG_TEAM_1_PENALTIES,
AVG(TEAM_2_PENALTIES) AS AVG_TEAM_2_PENALTIES,
SUM(CASE WHEN PLAYOFFGAME =1  AND ((TEAM_1_GOAL>TEAM_2_GOAL) OR ((TEAM_1_GOAL=TEAM_2_GOAL) AND (TEAM_1_XGOAL>TEAM_2_XGOAL))) THEN 1 ELSE 0 END) AS TEAM_1_PLAYOFF_WINS,
SUM(CASE WHEN PLAYOFFGAME =1  AND ((TEAM_2_GOAL>TEAM_1_GOAL) OR ((TEAM_1_GOAL=TEAM_2_GOAL) AND (TEAM_2_XGOAL>TEAM_1_XGOAL))) THEN 1 ELSE 0 END) AS TEAM_2_PLAYOFF_WINS,
AVG(TEAM_1_GOAL) AS TEAM_1_AVG_GOALS_PER_MATCH,
AVG(TEAM_2_GOAL) AS TEAM_2_AVG_GOALS_PER_MATCH,
AVG(TEAM_1_GOAL_PERCENTAGE) AS TEAM_1_AVG_GOAL_PERCENTAGE,
AVG(TEAM_2_GOAL_PERCENTAGE) AS TEAM_2_AVG_GOAL_PERCENTAGE
FROM CTE_ARRANGED_TEAM_STATS
GROUP BY TEAM_1,TEAM_2;

truncate  table NHL_DB.RAW.ALL_GAME_STATS;
INSERT INTO NHL_DB.RAW.ALL_GAME_STATS

WITH CTE_SOURCE_DATA AS (
SELECT GAMEID,GAMEDATE,
PLAYERTEAM AS HOME_TEAM,
OPPOSINGTEAM AS AWAY_TEAM,
GOALSFOR AS HOME_TEAM_SCORE,
GOALSAGAINST AS AWAY_TEAM_SCORE,
XGOALSFOR AS HOME_TEAM_XSCORE,
XGOALSAGAINST AS AWAY_TEAM_XSCORE,
ICETIME
FROM NHL_DB.RAW.ALL_TEAMS 
WHERE  SITUATION ='all'
AND HOME_OR_AWAY = 'HOME'
AND GAMEID NOT IN (SELECT DISTINCT GAMEID FROM NHL_DB.RAW.ALL_TEAMS
WHERE GOALSFOR=GOALSAGAINST AND ICETIME>3600 AND XGOALSFOR=XGOALSAGAINST)
)

SELECT 
GAMEID,GAMEDATE,HOME_TEAM,
T1.TEAM_ID AS HOME_TEAM_INDEX,
AWAY_TEAM,
T2.TEAM_ID AS AWAY_TEAM_INDEX,
CASE WHEN HOME_TEAM_SCORE=AWAY_TEAM_SCORE THEN HOME_TEAM_XSCORE ELSE HOME_TEAM_SCORE END AS HOME_TEAM_SCORE,
CASE WHEN HOME_TEAM_SCORE=AWAY_TEAM_SCORE THEN AWAY_TEAM_XSCORE ELSE AWAY_TEAM_SCORE END AS AWAY_TEAM_SCORE,
CASE WHEN (ICETIME-3600)>0 THEN 1 ELSE 0 END AS OVERTIME_FLAG
FROM CTE_SOURCE_DATA AS S
INNER JOIN NHL_DB.RAW.DIM_TEAMS AS T1
ON S.HOME_TEAM=T1.TEAM_NAME
INNER JOIN NHL_DB.RAW.DIM_TEAMS AS T2
ON S.AWAY_TEAM=T2.TEAM_NAME




