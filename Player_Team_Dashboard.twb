<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='VIEW_GAME_TIME_SERIES (VIEW_GAME_TIME_SERIES)' inline='true' name='federated.1r726gn03v9lip1cemrat1ner4o4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='VIEW_GAME_TIME_SERIES' name='excel-direct.1uzbdy307ufdtb13kh7cq0d7fjy6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Pal/Downloads/VIEW_GAME_TIME_SERIES.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='VIEW_PLAYER_TIME_SERIES' name='excel-direct.0s1xt5t1ihtgat10ctp990swwblq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Pal/Downloads/VIEW_PLAYER_TIME_SERIES.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1uzbdy307ufdtb13kh7cq0d7fjy6' name='VIEW_GAME_TIME_SERIES' table='[VIEW_GAME_TIME_SERIES$]' type='table'>
          <columns gridOrigin='A1:C38517:no:A1:C38517:0' header='yes' outcome='6'>
            <column datatype='string' name='TEAM' ordinal='0' />
            <column datatype='date' date-parse-format='yyyyMMdd' name='GAMEDATE' ordinal='1' />
            <column datatype='integer' name='GOAL_DIFFERENCE' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1uzbdy307ufdtb13kh7cq0d7fjy6' name='VIEW_GAME_TIME_SERIES' table='[VIEW_GAME_TIME_SERIES$]' type='table'>
            <columns gridOrigin='A1:C38517:no:A1:C38517:0' header='yes' outcome='6'>
              <column datatype='string' name='TEAM' ordinal='0' />
              <column datatype='date' date-parse-format='yyyyMMdd' name='GAMEDATE' ordinal='1' />
              <column datatype='integer' name='GOAL_DIFFERENCE' ordinal='2' />
            </columns>
          </relation>
          <relation connection='excel-direct.0s1xt5t1ihtgat10ctp990swwblq' name='VIEW_PLAYER_TIME_SERIES' table='[VIEW_PLAYER_TIME_SERIES$]' type='table'>
            <columns gridOrigin='A1:E7011:no:A1:E7011:0' header='yes' outcome='6'>
              <column datatype='string' name='PLAYER_LAST_NAME' ordinal='0' />
              <column datatype='date' date-parse-format='yyyyMMdd' name='GAMEDATE' ordinal='1' />
              <column datatype='integer' name='NO_OF_ATTEMPTED_SHOTS' ordinal='2' />
              <column datatype='integer' name='NO_OF_GOALS' ordinal='3' />
              <column datatype='integer' name='NO_OF_XGOALS' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[GAMEDATE (VIEW!PLAYER!TIME!SERIES)]' value='[VIEW_PLAYER_TIME_SERIES].[GAMEDATE]' />
          <map key='[GAMEDATE]' value='[VIEW_GAME_TIME_SERIES].[GAMEDATE]' />
          <map key='[GOAL_DIFFERENCE]' value='[VIEW_GAME_TIME_SERIES].[GOAL_DIFFERENCE]' />
          <map key='[NO_OF_ATTEMPTED_SHOTS]' value='[VIEW_PLAYER_TIME_SERIES].[NO_OF_ATTEMPTED_SHOTS]' />
          <map key='[NO_OF_GOALS]' value='[VIEW_PLAYER_TIME_SERIES].[NO_OF_GOALS]' />
          <map key='[NO_OF_XGOALS]' value='[VIEW_PLAYER_TIME_SERIES].[NO_OF_XGOALS]' />
          <map key='[PLAYER_LAST_NAME]' value='[VIEW_PLAYER_TIME_SERIES].[PLAYER_LAST_NAME]' />
          <map key='[TEAM]' value='[VIEW_GAME_TIME_SERIES].[TEAM]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[VIEW_GAME_TIME_SERIES]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C38517:no:A1:C38517:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[VIEW_PLAYER_TIME_SERIES]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>6</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E30884:no:A1:E30884:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEAM</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TEAM]</local-name>
            <parent-name>[VIEW_GAME_TIME_SERIES]</parent-name>
            <remote-alias>TEAM</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GAMEDATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[GAMEDATE]</local-name>
            <parent-name>[VIEW_GAME_TIME_SERIES]</parent-name>
            <remote-alias>GAMEDATE</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GOAL_DIFFERENCE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GOAL_DIFFERENCE]</local-name>
            <parent-name>[VIEW_GAME_TIME_SERIES]</parent-name>
            <remote-alias>GOAL_DIFFERENCE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PLAYER_LAST_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PLAYER_LAST_NAME]</local-name>
            <parent-name>[VIEW_PLAYER_TIME_SERIES]</parent-name>
            <remote-alias>PLAYER_LAST_NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GAMEDATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[GAMEDATE (VIEW!PLAYER!TIME!SERIES)]</local-name>
            <parent-name>[VIEW_PLAYER_TIME_SERIES]</parent-name>
            <remote-alias>GAMEDATE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NO_OF_ATTEMPTED_SHOTS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NO_OF_ATTEMPTED_SHOTS]</local-name>
            <parent-name>[VIEW_PLAYER_TIME_SERIES]</parent-name>
            <remote-alias>NO_OF_ATTEMPTED_SHOTS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NO_OF_GOALS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NO_OF_GOALS]</local-name>
            <parent-name>[VIEW_PLAYER_TIME_SERIES]</parent-name>
            <remote-alias>NO_OF_GOALS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NO_OF_XGOALS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NO_OF_XGOALS]</local-name>
            <parent-name>[VIEW_PLAYER_TIME_SERIES]</parent-name>
            <remote-alias>NO_OF_XGOALS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Gamedate (View!Player!Time!Series)' datatype='date' name='[GAMEDATE (VIEW!PLAYER!TIME!SERIES)]' role='dimension' type='quantitative' />
      <column aggregation='Count' caption='Gamedate' datatype='date' datatype-customized='true' name='[GAMEDATE]' role='dimension' type='quantitative' />
      <column caption='Goal Difference' datatype='integer' name='[GOAL_DIFFERENCE]' role='measure' type='quantitative' />
      <column caption='No Of Attempted Shots' datatype='integer' name='[NO_OF_ATTEMPTED_SHOTS]' role='measure' type='quantitative' />
      <column caption='No Of Goals' datatype='integer' name='[NO_OF_GOALS]' role='measure' type='quantitative' />
      <column caption='No Of Xgoals' datatype='integer' name='[NO_OF_XGOALS]' role='measure' type='quantitative' />
      <column caption='Player Last Name' datatype='string' name='[PLAYER_LAST_NAME]' role='dimension' type='nominal' />
      <column caption='Team' datatype='string' name='[TEAM]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='VIEW_GAME_TIME_SERIES' datatype='table' name='[__tableau_internal_object_id__].[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='VIEW_PLAYER_TIME_SERIES' datatype='table' name='[__tableau_internal_object_id__].[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]' role='measure' type='quantitative' />
      <column-instance column='[PLAYER_LAST_NAME]' derivation='None' name='[none:PLAYER_LAST_NAME:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Pal/Documents/My Tableau Repository/Datasources/VIEW_GAME_TIME_SERIES (VIEW_GAME_TIME_SERIES).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/28/2023 01:04:06 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E' table='[Extract].[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
            <relation name='VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E' table='[Extract].[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]' type='table' />
            <relation name='VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171' table='[Extract].[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]' type='table' />
          </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
          <cols>
            <map key='[GAMEDATE (VIEW!PLAYER!TIME!SERIES)]' value='[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171].[GAMEDATE]' />
            <map key='[GAMEDATE]' value='[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E].[GAMEDATE]' />
            <map key='[GOAL_DIFFERENCE]' value='[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E].[GOAL_DIFFERENCE]' />
            <map key='[NO_OF_ATTEMPTED_SHOTS]' value='[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171].[NO_OF_ATTEMPTED_SHOTS]' />
            <map key='[NO_OF_GOALS]' value='[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171].[NO_OF_GOALS]' />
            <map key='[NO_OF_XGOALS]' value='[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171].[NO_OF_XGOALS]' />
            <map key='[PLAYER_LAST_NAME]' value='[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171].[PLAYER_LAST_NAME]' />
            <map key='[TEAM]' value='[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E].[TEAM]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='VIEW_GAME_TIME_SERIES (VIEW_GAME_TIME_SERIES)' increment-value='%null%' refresh-type='create' rows-inserted='69399' timestamp-start='2023-11-28 13:04:04.720' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>TEAM</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TEAM]</local-name>
              <parent-name>[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]</parent-name>
              <remote-alias>TEAM</remote-alias>
              <ordinal>0</ordinal>
              <family>VIEW_GAME_TIME_SERIES</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>37</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GAMEDATE</remote-name>
              <remote-type>133</remote-type>
              <local-name>[GAMEDATE]</local-name>
              <parent-name>[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]</parent-name>
              <remote-alias>GAMEDATE</remote-alias>
              <ordinal>1</ordinal>
              <family>VIEW_GAME_TIME_SERIES</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>5694</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GOAL_DIFFERENCE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GOAL_DIFFERENCE]</local-name>
              <parent-name>[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]</parent-name>
              <remote-alias>GOAL_DIFFERENCE</remote-alias>
              <ordinal>2</ordinal>
              <family>VIEW_GAME_TIME_SERIES</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PLAYER_LAST_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PLAYER_LAST_NAME]</local-name>
              <parent-name>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</parent-name>
              <remote-alias>PLAYER_LAST_NAME</remote-alias>
              <ordinal>3</ordinal>
              <family>VIEW_PLAYER_TIME_SERIES</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1570</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GAMEDATE</remote-name>
              <remote-type>133</remote-type>
              <local-name>[GAMEDATE (VIEW!PLAYER!TIME!SERIES)]</local-name>
              <parent-name>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</parent-name>
              <remote-alias>GAMEDATE</remote-alias>
              <ordinal>4</ordinal>
              <family>VIEW_PLAYER_TIME_SERIES</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>265</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NO_OF_ATTEMPTED_SHOTS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NO_OF_ATTEMPTED_SHOTS]</local-name>
              <parent-name>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</parent-name>
              <remote-alias>NO_OF_ATTEMPTED_SHOTS</remote-alias>
              <ordinal>5</ordinal>
              <family>VIEW_PLAYER_TIME_SERIES</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NO_OF_GOALS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NO_OF_GOALS]</local-name>
              <parent-name>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</parent-name>
              <remote-alias>NO_OF_GOALS</remote-alias>
              <ordinal>6</ordinal>
              <family>VIEW_PLAYER_TIME_SERIES</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NO_OF_XGOALS</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NO_OF_XGOALS]</local-name>
              <parent-name>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</parent-name>
              <remote-alias>NO_OF_XGOALS</remote-alias>
              <ordinal>7</ordinal>
              <family>VIEW_PLAYER_TIME_SERIES</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:PLAYER_LAST_NAME:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alexeyev&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Backlund&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Beck&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Biro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bouchard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Byram&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cholowski&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cooley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dauphin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dorofeyev&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dvorak&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eyssimont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Foegele&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gambrell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grant&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gustafsson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hartman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hoffman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Irwin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joshua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kaut&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Konecny&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuraly&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lazar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lockwood&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MacDonald&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marner&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;McKown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Milano&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nemeth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Okposo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pionk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rasmussen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rondbjerg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sandin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sharangovich&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Soderblom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stenlund&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tavares&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trenin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wagner&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yamamoto&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abruzzese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Armia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barzal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolduc&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ceci&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cogliano&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cuylle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deslauriers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Duehr&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eller&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fedun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Froden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Giuseppe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gudbranson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hanifin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Helm&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Huberdeau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Johansson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karlsson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kleven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Krug&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liljegren&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luneau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mangiapane&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McCabe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mermis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Murphy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nurse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panarin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peterka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Puljujarvi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Riemsdyk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ryan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Schwartz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Simmonds&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stanley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tippett&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Verhaeghe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zibanejad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Agozzino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Athanasiou&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bean&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berggren&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bordeleau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burakovsky&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chatfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Compher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dahlin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dillon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dunn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Entwistle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fischer&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gagner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Goodrow&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guhle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hinostroza&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hyman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jokiharju&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kasper&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Koepke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kulak&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laughton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lindholm&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lyubushkin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marchenko&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McDonagh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meyers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namestnikov&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;O&apos;Connor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pastrnak&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pezzetta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Raddysh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Robins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Samorukov&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seider&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slafkovsky&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stecher&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweezey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tolvanen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vlasic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wood&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zucker&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Balcers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bellemare&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bjugstad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bratt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carlson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cicek&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cousins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DeBrusk&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dries&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Edvinsson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fagemo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Forbort&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gavrikov&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hagg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hayden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Holloway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jarry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kadri&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kempe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Korczak&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyrou&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehkonen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lowry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MacKinnon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martinook&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;McMichael&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mitchell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niederreiter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orlov&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pelletier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Point&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reaves&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roslovic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Scandella&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Soshnikov&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Texier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tucker&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Watson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zadina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Backstrom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beckman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bjork&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boyd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Capobianco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christiansen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Copp&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Doughty&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eberle&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fabbri&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Foerster&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gravel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guttman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harvey-Pinard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hoglander&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jankowski&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Josi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kelemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kopitar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kurashev&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Leason&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lohrei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MacEachern&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;McLaughlin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nesterenko&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oleksiak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pederson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pitlick&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rathbone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rooney&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shattenkirk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Soderstrom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stepan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Teasdale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trocheck&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wahlstrom&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ylnen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aho&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Atkinson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bear&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bernard-Docker&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Borgen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burns&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chiarot&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comtois&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dalpe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dobson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dunne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Erne&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fitzgerald&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gaizo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gostisbehere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gurianov&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harpur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hintz&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iafallo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jones&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kassian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Koivula&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kulikov&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lauko&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lindstrm&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maatta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marchessault&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;McDonough&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Middleton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Necas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;O&apos;Reilly&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paul&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Phillips&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rakell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Robinson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samoskevich&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seney&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slavin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Steel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanev&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tomasino&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Voracek&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wotherspoon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barrie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boeser&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brodin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clutterbuck&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crosby&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Desharnais&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Duchene&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eklund&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fast&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Frederic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Girgensons&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grzelcyk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Heiskanen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Howden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jiricek&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kapanen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Killorn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kreider&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lafrenire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lettieri&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lundestrom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malinski&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McAvoy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mercer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moser&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Novak&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pesce&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Protas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Richard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rutta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Schueneman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sillinger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Staal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sturm&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timmins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vatrano&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Whitecloud&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zegras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Acciari&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arvidsson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bastian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benoit&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Boldy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bryson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cernak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cole&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czarnik&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Desnoyers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Duhaime&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Emberson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fehervary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Froese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Glass&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guenette&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hanley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Henrique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hughes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Karlstrom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Klingberg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kubalik&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lapierre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lindblom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luostarinen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McCann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Merrill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nylander&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Parayko&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peterson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulock&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ristolainen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sedlak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sissons&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stastney&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suzuki&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tkachuk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vesey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zohorna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andreoff&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barkov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bemstrom&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Blidh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broberg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carrier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clarke&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cozens&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denisenko&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dube&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ekblad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Farrell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fowler&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Giordano&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Groulx&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hall&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heinen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hornqvist&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jenner&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kampf&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Khaira&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kravtsov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laferriere&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leschyshyn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luff&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malenstyn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Megna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norris&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pacioretty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Perry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pouliot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Reinhart&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ruhwedel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Schmidt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Siegenthaler&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sprong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Studenic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thrun&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vaakanainen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wheeler&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aktell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Attard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beaulieu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Borowiecki&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burroughs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chiasson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Condotta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Danault&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Domi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Durandeau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Evangelista&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fix-Wolansky&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Galchenyuk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gourde&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gushchin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harrington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hirose&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Imama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jonsson-Fjallby&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kastelic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kolesar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kunin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lauzon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Livingstone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maccelli&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marchment&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;McGinn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mikheyev&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neighbours&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oesterle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pavel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pietrangelo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rantanen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rodrigues&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samuelsson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sergachev&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tarasenko&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toninato&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Voronkov&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wright&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anderson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Balinskis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bellows&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Blackwell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Braun&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carlsson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cirelli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Couture&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dellandrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Drouin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ehlers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faksa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Forsberg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Geekie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gregor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hague&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hayes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Holmberg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jarventie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kaiser&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kerfoot&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kostin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Labanc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leivo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lucchini&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maenalanen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Matheson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;McNabb&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mittelstadt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niemelainen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oshie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Perbix&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poitras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Regenda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rossi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scheifele&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sherwood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Soucy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stralman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Theodore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tufte&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Weegar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zadorov&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anderson-Dolan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barabanov&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belpedio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blais&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brink&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carpenter&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cizikas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Couturier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeMelo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Drury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eichel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fantilli&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Forsling&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greig&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hajek&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hayton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Holmstrom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jarvis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kakko&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kessel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kotkaniemi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LaCombe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lemieux&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lucic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mahura&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Matinpalo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;McTavish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monahan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nieto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ovechkin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Perfetti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poolman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reichel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rousek&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Schenn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shesterkin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sourdif&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Strome&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thomas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turcotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wennberg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zaitsev&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Angle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barr-Boulet&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beniers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Blueger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brodie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carter&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Criscuolo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dermott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dubois&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ekholm&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fasching&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fox&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Girard&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grundstrom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hamblin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Heinola&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Horvat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jensen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kane&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kiersted&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Krebs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafferty&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Letang&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lundell&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malgin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mayo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Meier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morrissey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nosek&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pageau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Perunovich&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Power&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Renouf&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rust&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Schneider&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Silfverberg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spurgeon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Studnicka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tierney&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Valimaki&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zboril&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Archibald&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barron&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bennett&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bogosian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brodzinski&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Caufield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coghlan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crouse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DeSimone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Duclair&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ekman-Larsson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Faulk&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Friedman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Giroux&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gudas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamonic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Helleson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hronek&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johansen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kaprizov&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kiviranta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Krejci&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lagesson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lewis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lundkvist&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malkin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;McBain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Merela&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Motte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nugent-Hopkins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palmieri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Petan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Provorov&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rielly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ruzicka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Schultz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Simek&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Stamkos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sundqvist&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tinordi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Veleno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wideman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zetterlund&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Allison&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bedard&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bjorkstrand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brannstrom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carcone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chychrun&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coronato&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DeAngelo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dowd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fabbro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Foligno&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gaudreau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Graves&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hathaway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Holden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Janmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jost&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Koppanen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuzmenko&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Leddy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lomberg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MacEwen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Martin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;McLeod&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Minten&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newhook&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Olivier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peeke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Podkolzin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Raty&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sanheim&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Shaw&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sokolov&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stephenson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Teravainen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trouba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Walker&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alexandrov&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aube-Kubel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beauvillier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bertuzzi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bortuzzo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Byfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chinakhov&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Connor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danforth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Donato&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Durzi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fleury&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gallagher&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Granlund&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gust&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harris&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hischier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iorio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Joseph&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Katchouk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kolyachonok&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kupari&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lavoie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lizotte&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MacDermid&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;McIlrath&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mikkola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nelson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Okhotiuk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pavelski&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pinto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Raska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Romanov&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sanderson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Severson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Snively&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Steeves&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Toropchenko&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vrana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Xhekaj&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Addison&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asplund&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Batherson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bonino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Buchnevich&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chabot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coleman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dewar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dumba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englund&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ferraro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frost&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Glendening&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guenther&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hardman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hertl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hunt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Johnsson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kartye&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Knies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kucherov&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Larkin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lindell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luoto&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mantha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McCarron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mete&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Muzzin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nyquist&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parise&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Petry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pyyhtia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ritchie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Salo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seeler&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Skinner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stastny&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Svechnikov&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Toews&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Viel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Winterton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zub&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andersson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbashev&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belzile&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Blankenburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brisebois&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carrick&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clague&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coyle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Demers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Drysdale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ek&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Farabee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Foudy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ginning&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gross&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hakanp&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hedman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Holtz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jeannot&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kaliyev&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kesselring&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kovacevic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laczynski&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leonard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ludvig&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Makar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Matthews&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;McWard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montour&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Noesen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pachal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Perron&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pospisil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reilly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Schmaltz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spence&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sttzle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thompson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ullmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Werenski&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zamula&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amadio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bailey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beecher&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bjornfot&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brassard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carlo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chytil&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cotter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DeBrincat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Draisaitl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Edmundson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faber&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Foote&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gauthier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hagel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haula&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Holl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jarnkrok&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Juulsen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kelly&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Korchinski&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuznetsov&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lorentz&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mackey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Martinez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;McMann&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mintyukov&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nichushkin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Olofsson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pelech&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poehling&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Raymond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rosen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Savard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solovyov&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stillman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Terry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Walman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zacha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Afanasyev&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aston-Reese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bayreuther&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bergeron&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boqvist&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bunting&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chartier&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dadonov&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dumoulin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Engvall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fiala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gadjovich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Goligoski&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guentzel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harkins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Highmore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hutton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kase&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Knyzhov&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuhlman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Larsson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lindgren&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lycksell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marchand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McDavid&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meyer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Myers&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;O&apos;Brien&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parssinen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pettersson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quinn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robertson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Samberg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seguin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Skjei&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stauber&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Svozil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Toffoli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vilardi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wolanin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zuccarello&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='VIEW_GAME_TIME_SERIES' id='VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E'>
            <properties context=''>
              <relation connection='excel-direct.1uzbdy307ufdtb13kh7cq0d7fjy6' name='VIEW_GAME_TIME_SERIES' table='[VIEW_GAME_TIME_SERIES$]' type='table'>
                <columns gridOrigin='A1:C38517:no:A1:C38517:0' header='yes' outcome='6'>
                  <column datatype='string' name='TEAM' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyyMMdd' name='GAMEDATE' ordinal='1' />
                  <column datatype='integer' name='GOAL_DIFFERENCE' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E' table='[Extract].[VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E]' type='table' />
            </properties>
          </object>
          <object caption='VIEW_PLAYER_TIME_SERIES' id='VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171'>
            <properties context=''>
              <relation connection='excel-direct.0s1xt5t1ihtgat10ctp990swwblq' name='VIEW_PLAYER_TIME_SERIES' table='[VIEW_PLAYER_TIME_SERIES$]' type='table'>
                <columns gridOrigin='A1:E7011:no:A1:E7011:0' header='yes' outcome='6'>
                  <column datatype='string' name='PLAYER_LAST_NAME' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyyMMdd' name='GAMEDATE' ordinal='1' />
                  <column datatype='integer' name='NO_OF_ATTEMPTED_SHOTS' ordinal='2' />
                  <column datatype='integer' name='NO_OF_GOALS' ordinal='3' />
                  <column datatype='integer' name='NO_OF_XGOALS' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171' table='[Extract].[VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[GAMEDATE]' />
              <expression op='[GAMEDATE (VIEW!PLAYER!TIME!SERIES)]' />
            </expression>
            <first-end-point object-id='VIEW!GAME!TIME!SERIES_A4D346B936A0478989CF6769A7E6B63E' />
            <second-end-point object-id='VIEW!PLAYER!TIME!SERIES_BD3CADBC56524F8ABC49CF006C9C3171' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Finisher vs Shooter'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Finisher/Shooter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VIEW_GAME_TIME_SERIES (VIEW_GAME_TIME_SERIES)' name='federated.1r726gn03v9lip1cemrat1ner4o4' />
          </datasources>
          <datasource-dependencies datasource='federated.1r726gn03v9lip1cemrat1ner4o4'>
            <column caption='Gamedate (View!Player!Time!Series)' datatype='date' name='[GAMEDATE (VIEW!PLAYER!TIME!SERIES)]' role='dimension' type='quantitative' />
            <column caption='No Of Goals' datatype='integer' name='[NO_OF_GOALS]' role='measure' type='quantitative' />
            <column caption='No Of Xgoals' datatype='integer' name='[NO_OF_XGOALS]' role='measure' type='quantitative' />
            <column caption='Player Last Name' datatype='string' name='[PLAYER_LAST_NAME]' role='dimension' type='nominal' />
            <column caption='Team' datatype='string' name='[TEAM]' role='dimension' type='nominal' />
            <column-instance column='[GAMEDATE (VIEW!PLAYER!TIME!SERIES)]' derivation='None' name='[none:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_LAST_NAME]' derivation='None' name='[none:PLAYER_LAST_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
            <column-instance column='[NO_OF_GOALS]' derivation='Sum' name='[sum:NO_OF_GOALS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NO_OF_XGOALS]' derivation='Sum' name='[sum:NO_OF_XGOALS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]' included-values='in-range'>
            <min>#2022-10-13#</min>
            <max>#2023-11-11#</max>
          </filter>
          <filter class='categorical' column='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:TEAM:nk]'>
            <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;PIT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:TEAM:nk]</column>
            <column>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:NO_OF_GOALS:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:PLAYER_LAST_NAME:nk]' />
              <color column='[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:NO_OF_GOALS:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='410' />
                <format attr='maxwidth' value='410' />
                <format attr='minheight' value='398' />
                <format attr='maxheight' value='398' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:NO_OF_GOALS:qk]</rows>
        <cols>[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:NO_OF_XGOALS:qk]</cols>
      </table>
      <simple-id uuid='{2AA6D2C7-21A1-4EAD-8EB0-C3BE348DE9F1}' />
    </worksheet>
    <worksheet name='Player Stats'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Shooter Stats</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VIEW_GAME_TIME_SERIES (VIEW_GAME_TIME_SERIES)' name='federated.1r726gn03v9lip1cemrat1ner4o4' />
          </datasources>
          <datasource-dependencies datasource='federated.1r726gn03v9lip1cemrat1ner4o4'>
            <column caption='Gamedate (View!Player!Time!Series)' datatype='date' name='[GAMEDATE (VIEW!PLAYER!TIME!SERIES)]' role='dimension' type='quantitative' />
            <column caption='No Of Attempted Shots' datatype='integer' name='[NO_OF_ATTEMPTED_SHOTS]' role='measure' type='quantitative' />
            <column caption='No Of Goals' datatype='integer' name='[NO_OF_GOALS]' role='measure' type='quantitative' />
            <column caption='No Of Xgoals' datatype='integer' name='[NO_OF_XGOALS]' role='measure' type='quantitative' />
            <column caption='Player Last Name' datatype='string' name='[PLAYER_LAST_NAME]' role='dimension' type='nominal' />
            <column caption='Team' datatype='string' name='[TEAM]' role='dimension' type='nominal' />
            <column-instance column='[GAMEDATE (VIEW!PLAYER!TIME!SERIES)]' derivation='None' name='[none:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_LAST_NAME]' derivation='None' name='[none:PLAYER_LAST_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
            <column-instance column='[NO_OF_ATTEMPTED_SHOTS]' derivation='Sum' name='[sum:NO_OF_ATTEMPTED_SHOTS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NO_OF_GOALS]' derivation='Sum' name='[sum:NO_OF_GOALS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NO_OF_XGOALS]' derivation='Sum' name='[sum:NO_OF_XGOALS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r726gn03v9lip1cemrat1ner4o4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:NO_OF_ATTEMPTED_SHOTS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:NO_OF_GOALS:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:NO_OF_XGOALS:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]' included-values='in-range'>
            <min>#2022-10-13#</min>
            <max>#2022-12-30#</max>
          </filter>
          <filter class='categorical' column='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:TEAM:nk]'>
            <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;PIT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1r726gn03v9lip1cemrat1ner4o4].[:Measure Names]</column>
            <column>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:TEAM:nk]</column>
            <column>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1r726gn03v9lip1cemrat1ner4o4].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:PLAYER_LAST_NAME:nk]</rows>
        <cols>[federated.1r726gn03v9lip1cemrat1ner4o4].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F83DC736-641A-47B2-BCAA-344585AACFB6}' />
    </worksheet>
    <worksheet name='Player Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Player Performance Trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VIEW_GAME_TIME_SERIES (VIEW_GAME_TIME_SERIES)' name='federated.1r726gn03v9lip1cemrat1ner4o4' />
          </datasources>
          <datasource-dependencies datasource='federated.1r726gn03v9lip1cemrat1ner4o4'>
            <column caption='Gamedate (View!Player!Time!Series)' datatype='date' name='[GAMEDATE (VIEW!PLAYER!TIME!SERIES)]' role='dimension' type='quantitative' />
            <column caption='No Of Goals' datatype='integer' name='[NO_OF_GOALS]' role='measure' type='quantitative' />
            <column caption='Player Last Name' datatype='string' name='[PLAYER_LAST_NAME]' role='dimension' type='nominal' />
            <column-instance column='[GAMEDATE (VIEW!PLAYER!TIME!SERIES)]' derivation='None' name='[none:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]' pivot='key' type='quantitative' />
            <column-instance column='[PLAYER_LAST_NAME]' derivation='None' name='[none:PLAYER_LAST_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[NO_OF_GOALS]' derivation='Sum' name='[sum:NO_OF_GOALS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:PLAYER_LAST_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:PLAYER_LAST_NAME:nk]' member='&quot;Guentzel&quot;' />
              <groupfilter function='member' level='[none:PLAYER_LAST_NAME:nk]' member='&quot;Point&quot;' />
              <groupfilter function='member' level='[none:PLAYER_LAST_NAME:nk]' member='&quot;Tkachuk&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:PLAYER_LAST_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]' scope='cols' value='Game Date' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:PLAYER_LAST_NAME:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:NO_OF_GOALS:qk]</rows>
        <cols>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]</cols>
      </table>
      <simple-id uuid='{BBEFBE8D-7DFC-4313-A19B-A85F6A68D142}' />
    </worksheet>
    <worksheet name='Trend for Team Goal Difference '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trend for Team Goal Difference </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='VIEW_GAME_TIME_SERIES (VIEW_GAME_TIME_SERIES)' name='federated.1r726gn03v9lip1cemrat1ner4o4' />
          </datasources>
          <datasource-dependencies datasource='federated.1r726gn03v9lip1cemrat1ner4o4'>
            <column aggregation='Count' caption='Gamedate' datatype='date' datatype-customized='true' name='[GAMEDATE]' role='dimension' type='quantitative' />
            <column caption='Goal Difference' datatype='integer' name='[GOAL_DIFFERENCE]' role='measure' type='quantitative' />
            <column caption='Team' datatype='string' name='[TEAM]' role='dimension' type='nominal' />
            <column-instance column='[GAMEDATE]' derivation='None' name='[none:GAMEDATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
            <column-instance column='[GOAL_DIFFERENCE]' derivation='Sum' name='[sum:GOAL_DIFFERENCE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GAMEDATE]' derivation='Month-Trunc' name='[tmn:GAMEDATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE:qk]' included-values='in-range'>
            <min>#2022-10-13#</min>
            <max>#2022-12-30#</max>
          </filter>
          <filter class='categorical' column='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:TEAM:nk]'>
            <groupfilter function='member' level='[none:TEAM:nk]' member='&quot;PIT&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1r726gn03v9lip1cemrat1ner4o4].[tmn:GAMEDATE:qk]' included-values='in-range'>
            <min>#2022-08-20 00:00:00#</min>
            <max>#2022-12-29 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:TEAM:nk]</column>
            <column>[federated.1r726gn03v9lip1cemrat1ner4o4].[tmn:GAMEDATE:qk]</column>
            <column>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:GOAL_DIFFERENCE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#8cd17d' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:GOAL_DIFFERENCE:qk]</rows>
        <cols>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE:qk]</cols>
      </table>
      <simple-id uuid='{3A2E9B3F-81C4-4E6C-B538-95C822667860}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='VIEW_GAME_TIME_SERIES (VIEW_GAME_TIME_SERIES)' name='federated.1r726gn03v9lip1cemrat1ner4o4' />
      </datasources>
      <datasource-dependencies datasource='federated.1r726gn03v9lip1cemrat1ner4o4'>
        <column caption='Team' datatype='string' name='[TEAM]' role='dimension' type='nominal' />
        <column-instance column='[TEAM]' derivation='None' name='[none:TEAM:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='45250' id='3' name='Trend for Team Goal Difference ' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52750' id='20' name='Finisher vs Shooter' w='46900' x='800' y='46250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52750' id='22' name='Player Stats' w='35500' x='47700' y='46250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='89875' id='8' name='Trend for Team Goal Difference ' param='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:TEAM:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='21' name='Finisher vs Shooter' pane-specification-id='2' param='[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:NO_OF_GOALS:qk]' type-v2='color' w='16000' x='83200' y='90875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='89875' id='8' mode='checkdropdown' name='Trend for Team Goal Difference ' param='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:TEAM:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45250' id='3' is-fixed='true' name='Trend for Team Goal Difference ' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52750' id='20' is-fixed='true' name='Finisher vs Shooter' w='46900' x='800' y='46250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='21' name='Finisher vs Shooter' pane-specification-id='2' param='[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:NO_OF_GOALS:qk]' type-v2='color' w='16000' x='83200' y='90875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52750' id='22' is-fixed='true' name='Player Stats' w='35500' x='47700' y='46250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F6D6D3C6-AFFB-4233-BF0C-763E53C3270E}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Trend for Team Goal Difference '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1r726gn03v9lip1cemrat1ner4o4].[tmn:GAMEDATE:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:GOAL_DIFFERENCE:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE:qk]</field>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:TEAM:nk]</field>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[tyr:GAMEDATE:qk]</field>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[yr:GAMEDATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F697C03-F81F-4A50-8A0B-B95D63F26F47}' />
    </window>
    <window class='worksheet' name='Finisher vs Shooter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1r726gn03v9lip1cemrat1ner4o4].[sum:NO_OF_GOALS:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]</field>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:PLAYER_LAST_NAME:nk]</field>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:TEAM:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A6373A19-C4B3-45CD-B8C4-DAB0639D6169}' />
    </window>
    <window class='worksheet' name='Player Stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]</field>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:PLAYER_LAST_NAME:nk]</field>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:TEAM:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC9FC7CE-BD61-4BF7-87A6-7ABC1FC03719}' />
    </window>
    <window class='worksheet' name='Player Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1r726gn03v9lip1cemrat1ner4o4].[none:PLAYER_LAST_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[mn:GAMEDATE (VIEW!PLAYER!TIME!SERIES):ok]</field>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]</field>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[none:PLAYER_LAST_NAME:nk]</field>
            <field>[federated.1r726gn03v9lip1cemrat1ner4o4].[tyr:GAMEDATE (VIEW!PLAYER!TIME!SERIES):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EDFA765D-054E-435C-9E77-933AAFD027B6}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Finisher vs Shooter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Player Stats' />
        <viewpoint name='Trend for Team Goal Difference '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6DD13847-FD59-4A19-839B-21B45C2AA8F3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Finisher vs Shooter' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Player Stats' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Player Trend' width='192'>
      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
      MUJUrPUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trend for Team Goal Difference ' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
